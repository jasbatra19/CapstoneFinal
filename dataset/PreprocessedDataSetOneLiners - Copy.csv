question,answer
 What is a Data Structure?,"  Data structure is a way that specifies how to organize and manipulate the data so that the data can be used efficiently. It also specify the relationship between them. Some example of data structure are - array, linked list, stack etc."
 What are linear and non linear data Structures?,"Linear Data Structure:  If all the elements are arranged in sequential order then it is called linear data strucutre for example Array, Linked List. Non Linear Data Structure If the elements are not arranged in sequential order then it is called non linear data structure for example Tree, Graph."
 How Linked list is different from array?,"  Differences between array and linked list are -         1)\xa0 Arrays are index based data structure where each element is associated with an index. On the other hand, Linked list relies on references where each node consists of the data and the references to the previous and next element.        2)\xa0 The size of the arrays is fixed, Linked Lists are Dynamic in size.        3)\xa0 In array elements are accessed randomly using index while in linked list elements are accessed in sequence.        4)\xa0 Insertion and Deletion operations are expensive in array whereas it can be easily done in linked list.        5)\xa0 Extra memory space is required in linked list for storing address of next node.        6)\xa0 Element location is allocated during compile time in array while in linked list it is done during run time."
 What are the criteria of algorithm analysis?,  Algorithms are analyzed on the basis of 2 factors - time and space. Time specify how much execution time and space specify how much extra space is required by the algorithm.
 What are the operations that can be performed on a data-structures?,  Following operations can be performed -         \xa0Insertion :Adding a new data item.        \xa0Deletion :Deleting the existing data item.        \xa0Traversal :Accessing each data item.        \xa0Searching :Finding a particular data item.        \xa0Sorting :Arranging the data item in a particular sequence.
 Explain the difference between Divide & Conquer and Dynamic programming?,  In divide and Conquer approach we divide the problem into minimum possible sub-problem and solve them independently. Divide-and-Conquer is a Top-Down Technique. In Dynamic Programming we diving the problem to a minimum possible sub-problem and solve them combinedly. Dynamic Programming is a Bottom-Up Technique.
 Which data structure is used to perform recursion?, Stack is used to perform recursion due its Last in First Property. Recursion makes use of system stack for storing the return addresses of the function calls.
 What are the operations that can be performed on a stack?,"  Various operations that can be performed on a stack are -         \xa0Push Operation :  Inserting the data item into the stack.        \xa0Pop Operation :  Deleting the data item from the stack.        \xa0Peek Operation:  Get the data item which is on the top of the stack, without removing it."
" Explain Infix, prefix, Postfix notations?",          In Infix Notation operators are written in-between their operands. For example ->  A + B * C + D. In Prefix Notation operators are written before their operands. For example -> + + A * B C D. In  Postfix Notation operators are written after their operands. For example ->     A B C * + D +.
 What is a queue in data-structure?,  Queue is a linear data structure where the elements are inserted from one end called REAR and deleted from the other end called as FRONT. It follow First In First Out (FIFO) i.e the first element that is added to the queue is the first one to be removed.
 How to implement a stack using queue?,"  Stack can be implemented using 2 queues. To push an item in the stack, we first move all elements from the first queue to the second queue, then push new item into the first queue, and finally move all elements back to the first queue. This ensures that the new item lies at front of the queue and hence would be the first one to be removed. To pop an item from the stack, we simply return the front item from the first queue."
 What is Brute Force algorithm?,"  Brute force means that you will go through all possible solutions extensively. For example, in a chess game, if you know you can win in two moves, the brute force will go through all possible combination of moves, without taking anything in consideration. So the little pawn in the back that cannot influence the outcome will still be considered."
 What is the wrost case complexity of merge sort and quick sort?,  Merge sort : n*log(n)Quick sort : n^2
 What is shell sort?,"  Shell sort is a is a generalized version of insertion sort. It is a  highly efficient sorting algorithm. In shell sort we break the original list into a number of smaller sublists, each of which is sorted using an insertion sort."
 Which data structures are used for BFS and DFS of a graph?,  Queue is used for BFS while Stack is used for DFS.
 What is a binary search tree?,  Binary search tree is a binary tree in which all nodes of left subtree are less than root node and all nodes of right subtree are more than root node.
 What is an AVL Tree?,  AVL tree is a self-balancing Binary Search Tree where the difference between heights of left and right subtrees cannot be more than one for all nodes.
 What is a spanning tree?,"  A spanning tree is a subset of a graph, which has all the vertices covered with minimum possible number of edges. It cannot be disconnected and does not have cycles."
 What is hashing technique?, Hashing is a technique where search time is independent of the number of items or elements. In this technique a hash function is used to generate an address from a key. The hash function takes a key as input and returns the hash value of that key which is used as an address index in the array.
 what is heap data structure?,  Heap is a tree based data structure which satisfy the heap property. Heap can be of 2 type - Min Heap :  In this the value of the root node is less than or equal to either of its children. The same property must be recursively true for all sub-trees in that Binary Tree.Max Heap :  In this the value of the root node is greater than or equal to either of its children. The same property must be recursively true for all sub-trees in that Binary Tree.
 What is interpolation search technique?," The Interpolation Search is an improvement over Binary Search for instances, where the values in a sorted array are uniformly distributed.Interpolation search may go to different locations according to the value of the key being searched.For example :-  If the value of the key is closer to the last element, interpolation search is likely to start search toward the end side."
 What is tower of hanoi?," The Tower of Hanoi is one of the most popular puzzle of the nineteenth century. It consists of three pegs mounted on a board together and consists of disks of different sizes. At first, all the disks are kept on one peg(say peg 1) with the largest peg at the bottom and the size of pegs gradually decreases to the top.The goal of this puzzle is to transfer all the disks from one peg to another in order of size, placing the largest one at the bottom. The rule of the puzzle is that we can move a disk from one peg to another as long as the disk is never placed on the top of the smaller one."
 What is the primary advantage of a linked list?," Linked List can grow and shrink during run time. Insertion and Deletion Operations are Easier.', '1. What is JAVA?Answer:-Java is a widely used programming language expressly designed for use in the distributed environment of the internet. It is the most popular programming language for Android smartphone applications and is also among the most favored for the development of edge devices and the internet of things.', ""2. Major Differences between JAVA and C++?Answer:- There are lot of differences, some of the major differences are:        1)\xa0 C++ is mainly used for system programming.Java is mainly used for application programming. It is widely used in window, web-based, enterprise and mobile applications.        2)\xa0 C++ supports multiple inheritance.Java doesn't support multiple inheritance through class. It can be achieved by interfaces in java.        3)\xa0 C++ supports pointers. You can write pointer program in C++.        Java supports pointer internally. But you can't write the pointer program in java. It means java has restricted pointer support in java.        4)\xa0 C++ is platform-dependent.Java is platform-independent.        5)\xa0 C++ uses compiler only. C++ is compiled and run using the compiler which converts source code into machine code so, C++ is platform dependent. Java uses compiler and interpreter both. Java source code is converted into bytecode at compilation time. The interpreter executes this bytecode at runtime and produces output. Java is interpreted that is why it is platform independent.        6)\xa0 C++ supports structures and unions.  Java doesn't support structures and unions.        7)\xa0 C++ doesn't support documentation comment. Java supports documentation comment (/** ... */) to create documentation for java source code."", '3. What are the features in JAVA?Answer:- Java is a general-purpose programming language developed with the aim to bring portability and a higher level of security. Other than these two main java features, there are many other features of Java that make it such a unique and popular language.List of features of Java programming languages â€”        1)\xa0 Simple        2)\xa0 Object-Oriented        3)\xa0 Portable        4)\xa0 Platform Independent        5)\xa0 Secured        6)\xa0 Robust        7) \xa0Architecture Neutral        8)\xa0 Dynamic        9)\xa0 High Performance        10)\xa0 Multi-Threaded        11)\xa0 Distributed', '4. What do you understand by Java virtual machine?Answer:- JVM (Java Virtual Machine) is an abstract machine. It is a specification that provides runtime environment in which java bytecode can be executed.JVMs are available for many hardware and software platforms (i.e. JVM is platform dependent).        1)\xa0 A specification where working of Java Virtual Machine is specified. But implementation provider is independent to choose the algorithm. Its implementation has been provided by Sun and other companies.        2)\xa0 An implementation Its implementation is known as JRE (Java Runtime Environment).        3)\xa0 Runtime Instance Whenever you write java command on the command prompt to run the java class, an instance of JVM is created.', '5. What is the difference between JDK, JRE, and JVM?Answer:- Following are the differences between JDK, JRE, and JVM:        \xa0 JDK :-Java Development Kit is the core component of Java Environment and provides all the tools, executables and binaries required to compile, debug and execute a Java Program. JDK is a platform-specific software and thatâ€™s why we have separate installers for Windows, Mac, and Unix systems.        \xa0 JVM :-JVM is the heart of Java programming language. When we run a program, JVM is responsible for converting Byte code to the machine specific code. JVM is also platform dependent and provides core java functions like memory management, garbage collection, security etc.        \xa0 JRE :-JRE is the implementation of JVM, it provides a platform to execute java programs. JRE consists of JVM and java binaries and other classes to execute any program successfully. JRE doesnâ€™t contain any development tools like java compiler, debugger etc.', '6.How many types of memory areas are allocated by JVM?Answer:- There are six main types of memory areas that are allocated by JVM. These include:        1.\xa0 Class loader â€“ a subsystem of JVM that is used to load class files.        2.\xa0 Class (Method) Area â€“ stores per-class structures such as the runtime constant pool, field and method data, the code for methods.        3.\xa0  Heap - is the runtime data area in which objects are allocated.        4.\xa0 Stack - stores frames and holds local variables and partial results. Participates in method invocation and return.        5.\xa0 Program Counter (PC) Register - contains the address of the JVM instruction that is currently being executed.        6. \xa0Native Method Stack - contains all native methods used in the application.', '7. What is JIT compiler?Answer:- It is used to improve performance. JIT compiles parts of the bytecode that have similar functionality at the same time, and hence reduces the amount of time needed for compilation. Here the term â€œcompilerï¿½ refers to a translator from the instruction set of a Java virtual machine (JVM) to the instruction set of a specific CPU.', '8. What are the main differences between the Java platform and other platforms?Answer:- The three major differences between Java platform and most other platforms are:        1) \xa0It is a software-based platform while others can be hardware based or hardware software platform.        2)\xa0Java supports WORA (Write once run anywhere),which means it is platform independent, but many of other platforms does not provide such feature.        3) \xa0The Java API enable users to write java program, which are converted to byte code by interpreter and then into machine language by complier, whereas other platform provide either complier or interpreter.', '9. What is classloader?Answer:- We know that Java Program runs on Java Virtual Machine (JVM). When we compile a Java Class, it transforms it in the form of bytecode that is platform and machine independent compiled program and stores it as a .class file. After that when we try to use a Class, Java ClassLoader loads that class into memory.         1)\xa0 Bootstrap Class Loader :It loads JDK internal classes, typically loads rt.jar and other core classes for example java.lang.* package classes.        2)\xa0 Extensions Class Loader :It loads classes from the JDK extensions directory, usually $JAVA_HOME/lib/ext directory.        3)\xa0 System Class Loader :It loads classes from the current classpath that can be set while invoking a program using -cp or -classpath command line options.', '10. What is the default value of the local variables?Answer:- The local variables are not initialized to any default value, neither primitives nor object references.', ""11. What are the various access specifiers in Java?Answer:- You must have seen public, private and protected keywords while practising java programs, these are called access modifiers. An access modifier restricts the access of a class, constructor, data member and method in another class. In java we have four access modifiers:        1)\xa0 Default:When we do not mention any access modifier, it is called default access modifier. The scope of this modifier is limited to the package only. This means that if we have a class with the default access modifier in a package, only those classes that are in this package can access this class. No other class outside this package can access this class.        2)\xa0Private:Methods, variables, and constructors that are declared private can only be accessed within the declared class itself.Private access modifier is the most restrictive access level. Class and interfaces cannot be private.Variables that are declared private can be accessed outside the class, if public getter methods are present in the class.        3)\xa0Public:A class, method, constructor, interface, etc. declared public can be accessed from any other class. Therefore, fields, methods, blocks declared inside a public class can be accessed from any class belonging to the Java Universe.        4)\xa0Protected:Variables, methods, and constructors, which are declared protected in a superclass can be accessed only by the subclasses in other package or any class within the package of the protected members' class."", '12. Can we Overload or Override static methods in java ?Answer:-Can we overload static methods?:- The answer is â€˜Yesâ€™. We can have two ore more static methods with same name, but differences in input parameters.Can we Override static methods in java? :- We can declare static methods with same signature in subclass, but it is not considered overriding as there wonâ€™t be any run-time polymorphism. Hence the answer is â€˜Noâ€™. Static methods cannot be overridden because method overriding only occurs in the context of dynamic (i.e. runtime) lookup of methods. Static methods (by their name) are looked up statically (i.e. at compile-time).', '13. What are the advantages of Packages in Java?Answer:-There are various advantages of defining packages in Java.        1)\xa0Packages avoid the name clashes.        2)\xa0The Package provides easier access control.        3)\xa0We can also have the hidden classes that are not visible outside and used by the package.        4)\xa0It is easier to locate the related classes.', '14. What is object-oriented paradigm?Answer:- It is a programming paradigm based on objects having data and methods defined in the class to which it belongs. Object-oriented paradigm aims to incorporate the advantages of modularity and reusability. Objects are the instances of classes which interacts with one another to design applications and programs. There are the following features of the object-oriented paradigm.        1)\xa0 Follows the bottom-up approach in program design.        2)\xa0 Focus on data with methods to operate upon the objects data        3)\xa0Includes the concept like Encapsulation and abstraction which hides the complexities from the user and show only functionality.        4)\xa0Implements the real-time approach like inheritance, abstraction, etc.        5)\xa0The examples of the object-oriented paradigm are C++, Simula, Smalltalk, Python, C#, etc.', '15. What is the constructor? Answer:-A constructor in Java is a special method that is used to initialize objects. The constructor is called when an object of a class is created.', ""16. Does constructor return any value? Answer:-yes, The constructor implicitly returns the current instance of the class. (You can't use an explicit return type with the constructor)"", '17. How many types of constructors are used in Java?Answer:- Based on the parameters passed in the constructors, there are two types of constructors in Java.        1)\xa0 Default Constructor: A Constructor with no parameters is called as Default Constructor or no-arg constructor. In the below code we have created the no-arg constructor which gets called during the time of object creation.Example: (Abc a = new Abc())        2)\xa0Parameterized Constructor:A Constructor which has parameters in it called as Parameterized Constructors, the Parameterized constructor is used to assign different values for the different objects.  In the below example we have a parameterized constructor for the car class which set the value for the parameter â€œColorï¿½ Example: Abc(String Color)', '18. What is the static block?Answer:- Static block is a set of statements, which will be executed by the JVM before execution of main method.        At the time of class loading if we want to perform any activity we have to define that activity inside static block because this block execute at the time of class loading.', '19. What is the static method?Answer:-         1)\xa0A static method belongs to the class rather than the object.        2)\xa0There is no need to create the object to call the static methods.        3)\xa0A static method can access and change the value of the static variable.', '20. What are the main uses of this keyword?Answer:-There are the following uses of this keyword.        1)\xa0this can be used to refer to the current class instance variable.        2)\xa0 this can be used to invoke current class method (implicitly)        3) \xa0this() can be used to invoke the current class constructor.        4)\xa0this can be passed as an argument in the method call.        5)\xa0 this can be passed as an argument in the constructor call.        6)\xa0 this can be used to return the current class instance from the method.', '21. Which class is the superclass for all the classes?Answer:-The object class is the superclass of all other classes in Java.', '22. What is aggregation?Answer:-Aggregation in Java is a relationship between two classes that is best described as a ""has-a"" and ""whole/part"" relationship. It is a more specialized version of the association relationship. The aggregate class contains a reference to another class and is said to have ownership of that class. Each class referenced is considered to be part-of the aggregate class.', '23. What is composition?Answer:-Composition in java is the design technique to implement has-a relationship in classes. We can use java inheritance or Object composition in java for code reuse.Java composition is achieved by using instance variables that refers to other objects. For example:- A Person has a Job.', '24. Why does Java not support pointers?Answer:-The pointer is a variable that refers to the memory address. They are not used in Java because they are unsafe(unsecured) and complex to understand.', '25. What are the main uses of the super keyword?Answer:-The main uses of the super keyword is :-        1) super.< variable_name > refers to the variable of variable of parent class.        2) super() invokes the constructor of immediate parent class.        3) super.< method_name > refers to the method of parent class.', '26. What is the difference between the final method and abstract method?Answer:-Final method is a method that is marked as final, i.e. it cannot be overridden anymore. Just like final class cannot be inherited anymore.        Abstract method, on the other hand, is an empty method that is ought to be overridden by the inherited class. Without overriding, you will quickly get compilation error.', '27. What is the difference between compile-time polymorphism and runtime polymorphism?Answer:-There are the following differences between compile-time polymorphism and runtime polymorphism.compile-time polymorphism:-        1)In compile-time polymorphism, call to a method is resolved at compile-time.        2) It is also known as static binding, early binding, or overloading.        3) Overloading is a way to achieve compile-time polymorphism in which, we can define multiple methods or constructors with different signatures.        4) It provides fast execution because the type of an object is determined at compile-time.Run-time polymorphism:-        1)In runtime polymorphism, call to an overridden method is resolved at runtime.        2)It is also known as dynamic binding, late binding, overriding, or dynamic method dispatch.        3) Overriding is a way to achieve runtime polymorphism in which, we can redefine some particular method or variable in the derived class. By using overriding, we can give some specific implementation to the base class properties in the derived class.        4) It provides slower execution as compare to compile-time because the type of an object is determined at run-time.', '28. What is the difference between static binding and dynamic binding?Answer:-There are the following differences between static binding and dynamic binding.Static binding:-        1) Static binding in Java occurs during Compile time.         2) private, final and static methods and variables uses static binding and bonded by compiler.        3) Static binding uses Type(Class in Java)  information for binding.Dynamic binding:-        1) Dynamic binding occurs during Runtime.        2)virtual methods are bonded during runtime based upon runtime object.        3) Dynamic binding uses Object to resolve binding.', '29. What is the abstraction?Answer:-Data Abstraction is the property by virtue of which only the essential details are displayed to the user.The trivial or the non-essentials units are not displayed to the user.Example: A car is viewed as a car rather than its individual components.', '30. What is the abstract class?Answer:-Abstract class in Java is similar to interface except that it can contain default method implementation. An abstract class can have an abstract method without body and it can have methods with implementation also.Abstract class in Java Important Points        1) abstract keyword is used to create an abstract class in java.        2) Abstract class in java canâ€™t be instantiated.        3) We can use abstract keyword to create an abstract method, an abstract method doesnâ€™t have body.        4) If a class have abstract methods, then the class should also be abstract using abstract keyword, else it will not compile.1. What is C language?Answer:-  C is a general purpose, procedural programming language and developed at Bell labs by Dennis Ritchie in 1972-73. It is widely used programming language particularly used for system programming because it produces code that runs nearly as fast as the code written in assembly language. Today most of the operating systems are written in C language. C is a middle level language since it has feature of both low and high level language. 2. What are the features of C programming language?Answer:- Fast & Efficient: Programs Written in C are efficient and fast. This is due to its variety of data type and powerful operators.Portable: C can run on any machine with little or no modifications.Middle Level Language: It include feature of both high and low level programming language.Structured: It divides the problem into smaller modules called functions or procedures.Extensible: C is an extensible language as it can adopt new features. 3. Explain some real life applications of C programming language?Answer:- Some of the real life applications of C programming language are -             1.  Operation System             2.  Development of new language            3.  Embedded System            4.  Computation Platforms            5.  Graphics and Games 4. What are the fundamental data types in C programming?Answer:- integer(int), floating point(float), character(char) and void. 5. What are the return values of printf and scanf?Answer:- printf() returns total number of characters printed and if there is some error then it returns a negative value.scanf() returns the total number of input values that are scanned and if there is some input failure or error then it returns EOF.             6. What is difference between i++ and ++i?Answer:- i++ is known as Post Increment in which first value is used and then incremented whereas ++i is called Pre Increment in which value is first incremented and then used.  7. What is the use of static variable in c?Answer:- A static variable is a variable whose lifetime doesnâ€™t end with a function call where it is declared. All calls to the function share the same copy of static variables. For example static variables can be used to count the number of times a function is called. Also, static variables get the default value as 0. It is initialized only once in the memory heap to reduce the memory usage.  8. What is volatile keyword?Answer:- The volatile keyword is intended to prevent the compiler from applying any optimizations on variable that can change in ways that cannot be determined by the compiler. Variables declared as volatile are omitted from optimization because their values can be changed by code outside the scope of current code at any time. 9. How negative values are stored in c?Answer:- Negative numbers are stored in 2\'s compliment form.  10. What is a dangling pointer?Answer:- Dangling pointer is a pointer variable which holds the address (integer value) of that memory location which is removed or doesn\'t exist or you can say a pointer pointing to a memory location that has been deleted is called dangling pointer.  11. Can a program be compiled without a main() function?Answer:- Yes, we can compile a C program without main function but it will not be exceuted as its execution starts from the main function only. 12. What is lvalue and rvalue?Answer:- The value which appears on left side of assignment operator is called as lvalue while which appears on right side is called rvalue. 13. What are command line arguments?Answer:-Command line argument is used to pass the values to the main() function of any program. By command line argument we are actually passing values to our C program when they are executed. Command line arguments are given after the name of the program in command line shell of Operating Systems. 14. What is recursion?Answer:- Recursion is the process in which function call itself. Recursive functions are very useful to solve many mathematical problems.  15. What is the difference between malloc and calloc? Answer:- Both malloc and calloc are used in C programming language for dynamic memory allocation they obtain blocks of memory dynamically. The fundamental difference that exists between malloc and calloc in C language is calloc() requires two arguments while malloc() require one argument. malloc() doesnâ€™t initialize the allocated memory while calloc() allocates the memory and also initializes the allocated memory block to zero   16. What is the difference between Call by Value and Call by Reference?Answer:- There are two ways to pass arguments or parameters to function calls - call by value and call by reference. In call by value the value of the actual parameters are copied into the formal parameters and operations are applied on copied value not on original value while in call by reference the address of the variables are passed into the function call as the actual parameter and operations are performed on actual values i.e actual values are altered. 17. What are header files and its uses?Answer:- Header files are also known as library files. They contain two essential things: the definitions and prototypes of functions being used in a program. Header Files are included in the beginning of the program. It is a predefined code and we have to simply include the file. It has .h extension. It contains C declarations and macro definition. For eg - stdio.h 18. What are the different file extensions involved when programming in C?Answer:- Source code is saved with .c extension and when compiled it generate .obj file and .exe file. Also we have header files with extension .h  19. What is the difference between functions abs() and fabs()?Answer:- Both funtion are used to get the absolute value only difference is that abs() is used for integer values while fabs() is used for floating numbers. 20. What are actual and formal parameters?Answer:- Actual parameters are the parameters that are passed with function call while parameters or arguments which are mentioned in the definition of the function is called formal arguments.  21. What is the difference between structure and union?Answer:- Structure and union both are user defined data types which contains variables of different data types. Both of them have same syntax for definition, declaration of variables and for accessing members. The only difference is that in a structure all members gets memory allocated while in union compiler allocates the memory for the largest of all members and in a union all members have offset zero from the base and only one variable can be used at a time in union. 22. What is the difference between getchar and getch?Answer:- getchar() is a standard function that gets a character from the stdin while getch() is non-standard it gets a character from the keyboard (which may be different from stdin) and does not echo it. 23. What is type casting in c? Answer:- Type casting is a way to convert a variable from one data type to another data type. For example you can convert double value to integer. Typecasting is of 2 types implicit and explicit. Implicit conversions do not require any operator for converted. They are automatically performed when a value is copied to a compatible type in the program. The type conversion performed by the programmer by posing the data type of the expression of specific type is known as explicit type conversion. 24. What is a void pointer? Answer:- A Void pointer is a generic pointer in programming. If the pointer type is unknown, we make use of the void pointer. A void pointer is a pointer that has no associated data type with it. A void pointer can hold address of any type and can be typcasted to any type. 25. Explain pointers in C programming?Answer:- Pointers in C Programming Language is a variable that stores the address of another variable. To access address of a variable to a pointer, we use the unary operator & (ampersand) that returns the address of that variable. For example &q gives us address of variable q. A Pointer in C is used to allocate memory dynamically i.e. at run time.  * is used to denote that p is pointer variable and not a normal variable. 26. What is the use of a semicolon (;) at the end of every program statement?Answer:- Semicolon is a statement terminator in C to help the parser figure out where the statement ends since, by default statements in C can have any number of lines.  27. What is the difference between declaration and definition of a function?            Answer:- Declarations tell the compiler that a program element or name exists. A declaration introduces one or more names into a program. Declarations can occur more than once in a program. Function declaration declares the name of the function and the type of what it returns. Definitions specify what code or data the name describes. A name must be declared before it can be used. A function definition defines the function body, and defines what happens when the function is called.  28. What is memory leak?Answer:- In computer science, a memory leak is a particular type of unintentional memory consumption by a computer program where the program fails to release memory when no longer needed. This condition is normally the result of a bug in a program that prevents it from freeing up memory that it no longer needs. 29. What is scope of variable in c?Answer:- A scope is a region for the variable where the variable can be accessible. Global variables hold their values throughout the lifetime of the program and they can be accessed inside any of the functions defined for the program. while variables that are declared inside a function or block are called local variables.  30. What is the difference between near, far and huge pointers?Answer:- near, far and huge pointers were extensions to C to allow the programmer to give hints to the compiler about how to implement a pointer in the horrific segmented memory architecture of the Intel 8086/8088 (and 80186) CPUs.  Those CPUs used two 16 bit registers (and variously sized offsets) to generate a 20-bit address.Near pointer is used to store 16 bit addresses means within current segment on a 16 bit machine. The limitation is that we can only access 64kb of data at a time. A far pointer is typically 32 bit that can access memory outside current segment. To use this, compiler allocates a segment register to store segment address, then another register to store offset within current segment. Huge pointer is also typically 32 bit and can access outside segment. In case of far pointers, a segment is fixed. In far pointer, the segment part cannot be modified, but in Huge it can be.1. What is Software Engineering?Answer:-  IEEE defines \'Software Engineering\' as the application of a systematic, disciplined, quantifiable approach to the development, operation, and maintenance of software. IT industries adopt this approach to deliver software products and services to their clients. 2. What are the categories of software?Answer:- There are various categories of software, the majority of which are: System software, Application software, Embedded software, Web applications, Artificial intelligence software, and Scientific Software.            3. What is testing?Answer:- Testing is a process of executing a program with the intent of finding an error.            4. What is white box testing?Answer:- White box testing is a test case design method that uses the control structure of the procedural design to derive test cases. It is otherwise called as structural testing.             5. What is Black box testing?Answer:- Black box testing is a test case design method that focuses on the functional requirements of the software. It is otherwise called as functional testing.            6. What are verification and validation? Answer:- Verification: Verification refers to the set of activities that software correctly implements a specific function. Validation: Validation refers to the set of activities that ensure that the software that has been built is traceable to customer requirements.7.  What is debugging?Answer:- Debugging is the process that results in the removal of the error. It occurs as a consequence of successful testing.8.  Define cyclomatic complexity?Answer:- Cyclomatic complexity is a software metric that provides a quantitative measure of the logical complexity of a program. 9. What is error tracking?Answer:- Error tracking is an activity that provides a means for assessing the status of a current project.10. What is CASE tools?Answer:- Computer-Aided Software Engineering - CASE tools assist software engineering managers and practitioners in every activity associated with the software process. They automate project management activities to manage all work products produced throughout the process and assist the engineers in their analysis, design, coding, and test work. 11. What is data design?Answer:- Data design transforms the information domain model created during analysis into the data structures that will be required to implement the software.12. Define Cohesion and Coupling?Answer:- Cohesion: Cohesion is a measure of the relative functional strength of a module.Coupling: Coupling is a measure of the relative interdependence among module.            13. What are the different types of cohesion?Answer:- There are different types of cohesion: Coincidental Cohesion, Logical Cohesion Temporal Cohesion, Procedural Cohesion, Communicational Cohesion. 14. What are the different types of coupling?Answer:- There are different types of coupling : Data coupling, Stamp coupling, Control coupling, External Coupling, Common Coupling, Content coupling.15. What is user interface design?Answer:- User interface design creates effective communication,and a medium between a human and a computer.16. What is meant by specification?Answer:- A specification can be a written document, a graphical model, a formal mathematical model, a collection of usage scenarios, a prototype, or any combination of these.17. Define process?Answer:- A series of steps involving activities, constraints, and resources that produce an intended output of some kind is known as process.18. How the spiral model works?Answer:- The spiral model is an evolutionary software process model that couples the iterative nature of prototyping with the controlled and systematic aspects of the waterfall lifecycle model. It also has an emphasis on use or risk management techniques.19. What is winwin spiral model?Answer:- Winwin spiral model defines a set of negotiation activities, at the beginning of each pass around the spiral. The best negotiations strive for a win-win result. 20. Mention the various views in the system engineering hierarchy?Answer:- The various views in system engineering hierarchy from top to bottom in order are: World View, Domain View, Element View, and Detailed view.21. What is the software requirements definition?Answer:- A software requirements definition is an abstract description of the services which the system should provide and the constraints under which the system must operate.22. What is SDLC?Answer:- A software cycle deals with various parts and phases from planning to testing and deploying. All these activities are carried out in different ways, as per the needs. Each way is known as a Software Development Lifecycle Model (SDLC). Some examples are:  Waterfall model, Incremental/Iterative model, and Spiral model.              23. What are data acquisition system?Answer:- Systems that collect data from sensors for subsequent processing and analysis is termed as Data acquisition systems. Data collection process and processing processes may have different periods and deadlines.24. Define software configuration model Answer:- SCM is the art of identifying, organizing, and controlling modifications to the software being built by a programming team. It is an umbrella activity that is applied throughout the software process.25. What are the SCM activities? Answer:- SCM activities are developed to :            1. Identify change Control change.            2. Ensure that change is being properly implemented.            3. Report changes to others who may have an interest. 26. What is meant by loop testing?Answer:- Loop testing is a white box testing technique that focuses exclusively on the validity of loop constructs. This technique can be applied to simple loops, nested loops, concatenated loops, and unstructured loops.27. What is meant by smoke testing?            Answer:- Smoke testing is an integration testing approach that is commonly used when ""shrink wrapped"" software products are being developed.28. 28. What are alpha and beta tests?Answer:- Alpha test: Alpha test is the test that is conducted at the developer\'s site by a customer. Beta test: Beta test is the test that is conducted at one or more customer sites by the end-user of the software.29. What is meant by system testing?Answer:- System testing is actually a series of different tests whose primary purpose is to fully exercise the computer-based system. It verifies whether the system elements have been properly integrated and perform the allocated functions.30. Mention the categories of debugging approaches?Answer:-There are three categories of debugging approaches as follows: Brute-force, Backtracking, and Cause elimination.31. Define metric?Answer:- IEEE93 defines as a quantitative measure of the degree to which a system, component, or process possesses a given attribute. Metrics are important measures of project parameters that help predict measure and control projects. Metrics also help in estimation.32. What is adaptive maintenance?Answer:-Adaptive maintenance is the maintenance to adapt the software to a different operating environment. It involves changing a system so that it operates in a different environment from its initial implementation. 33. What is the user requirements?Answer:-User requirements should describe functional and non-functional requirements so that they are understandable by system users who don\'t have detailed technical knowledge. User requirements are defined using natural language, tables, and diagrams. 34. What is the test scenario?Answer:- The test scenario is the hypothetical story to test the particular functionality of an application. It serves as an input to functional testing. For the test scenario, we need use case. 35. Define prototype?Answer:- Prototype is an initial version of a software system that is used to demonstrate concepts, try out design options, and generally find out more about the problem and its possible solutions.36. What is the system image?Answer:- The system image combines the outward manifestation of the computer-based system, coupled with all supporting information that describes system syntax and semantics37. what is the transform mapping? Answer:-Transform mapping is a set of design steps that allows a DFD with transform flow characteristics to be mapped into a specific architectural style. 38. What is the traceability matrix?Answer:- Traceability matrix is a document in which we map the test cases with the requirements. In general, we check whet er the application works as per requirements or whether we had covered all the required functionality through test cases.39. What is Agile?Answer:-Agile software development is a group of software development methods in which requirements and solutions evolve through collaboration between self-organizing, cross-functional teams. It promotes adaptive planning, evolutionary development, early delivery, continuous improvement, and encourages rapid and flexible response to change.40.  What are the advantages of agile?Answer:-The advantages of agile are :            1. Time to Market: Early and regular releases.            2. Revenue: Early Return On Investment (ROI).            3. High Quality and Productivity: Testing is integrated throughout the cycle.            4. Business Engagement/Customer Satisfaction: Active involvement of a business owner and the high visibility of the product and progress.            5. Motivated Teams: Active involvement & collaboration make Agile development more enjoyable 41. What is Quality Control?Answer:- Quality Control focus is on the Product.QC measures a product against the existence of a required attribute. Major QC activity is identifying defects and correcting them (Rework).42. What is Quality Assurance?Answer:-  Quality Assurance focus is on the Process rather than Product. QA ensures ""Fitness for Purpose"". Building process guidelines, checklists, templates, Training activities.43. What is Cost of Quality?Answer:- Cost of Quality (CoQ) is a measure of costs (effort) incurred in ensuring quality. CoQ is typically measured as the percentage of effort spent to ensure quality compared to total project effort. Thus CoQ of 31.38% means that compared to the overall effort, the team has spent 31.38% of the effort to ensure quality.            CoQ = ((Prevention cost + Appraisal cost + Failure cost) x 100) / Total Project effort44. What is the Cost of Correcting Defects?Answer:-   Defects can get introduced in any of the following stages: Requirements Analysis, Design and Build. It is important to identify the defects and fix them before the release of the software. Accordingly, there is effort and cost involved in fixing the defects.45. What are the advantages and disadvantages of Black-Box Testing?Answer:-   The following table lists the advantages and disadvantages of black-box testing.            AdvantagesDisadvantagesWell suited and efficient for large code segments.Limited coverage, since only a selected number of test scenarios is actually performed.Code access is not required.Inefficient testing, tester only has limited knowledge about an application.Clearly separates user\'s perspective from the developer\'s perspective through visibly defined roles.Blind coverage, since the tester cannot target specific code segments or errorprone areas.Large numbers of moderately skilled testers can test the application with no knowledge of implementation, programming language, or operating systems.The test cases are difficult to design.46. What are the advantages and disadvantages of White-Box Testing?Answer:-   The following table lists the advantages and disadvantages of White-Box Testing.            AdvantagesDisadvantagesDirect statement by statement testingVast resource neededCheck algorithm are correctly defined and coded.Cannot test performance in terms of availability, reliability, load durability.Adherence to coding standards.Difficult to maintainMeasure coding qualityCosts are high47. What is the difference between validation and verification?Answer:-   The following table lists the difference between validation and verification.            ValidationVerificationValidation is a dynamic mechanism of validating and testing the actual product.Verification is a static practice of verifying documents, design, code, and program.It does involve executing the code.It does not involve executing the code.It is computer-based execution of program.It is human-based checking of documents and files.Validation to check whether the software meets the customer expectation and requirement.Verification is to check whether the software conforms to the specification.It can catch errors that verification cannot catch. It is a high-level exercise.It can catch errors that validation cannot catch. It is a low-level exercise.48. What is the difference between cohesion and coupling?Answer:-   The following table lists the difference between cohesion and coupling.            CohesionCouplingCohesion is the concept of intra moduleCoupling is the concept of inter moduleCohesion represents the relationship within moduleCoupling represents the relationship between moduleIncreasing in cohesion is good for software.Increasing in coupling is avoided for software.Highly cohesive give the best softwareLoosely coupling give the best softwareModule focus on the single thingModule is connected to the other module.49. What is the difference between Alpha and Beta testing?Answer:-   The following table lists the difference between Alpha and Beta testing.            Alpha TestingBeta TestingPerform by developerPerform by customerConducted for software applicationConducted for software productPerformed in virtual environmentPerformed in a real environmentInvolves both white box and black box testingInvolves black box testingIt is not open to the market and publicIt is open to the market and public50. What is the difference between Quality Control and Quality Assurance?Answer:-   The following table lists the difference between Quality Control and Quality Assurance.            Quality AssuranceQuality ControlQA is a managing toolQC is a correcting toolQA is process orientedQC is product orientedQA use proactive strategyQC use reactive strategyQA use for prevention of defectsQC use for detection of defectsEveryone is responsibleTesting team is responsible"
 What is JAVA?,Java is a widely used programming language expressly designed for use in the distributed environment of the internet. It is the most popular programming language for Android smartphone applications and is also among the most favored for the development of edge devices and the internet of things.
 Major Differences between JAVA and C++?," There are lot of differences, some of the major differences are:        1)\xa0 C++ is mainly used for system programming.Java is mainly used for application programming. It is widely used in window, web-based, enterprise and mobile applications.        2)\xa0 C++ supports multiple inheritance.Java doesn't support multiple inheritance through class. It can be achieved by interfaces in java.        3)\xa0 C++ supports pointers. You can write pointer program in C++.        Java supports pointer internally. But you can't write the pointer program in java. It means java has restricted pointer support in java.        4)\xa0 C++ is platform-dependent.Java is platform-independent.        5)\xa0 C++ uses compiler only. C++ is compiled and run using the compiler which converts source code into machine code so, C++ is platform dependent. Java uses compiler and interpreter both. Java source code is converted into bytecode at compilation time. The interpreter executes this bytecode at runtime and produces output. Java is interpreted that is why it is platform independent.        6)\xa0 C++ supports structures and unions.  Java doesn't support structures and unions.        7)\xa0 C++ doesn't support documentation comment. Java supports documentation comment (/** ... */) to create documentation for java source code."
 What are the features in JAVA?," Java is a general-purpose programming language developed with the aim to bring portability and a higher level of security. Other than these two main java features, there are many other features of Java that make it such a unique and popular language.List of features of Java programming languages â€”        1)\xa0 Simple        2)\xa0 Object-Oriented        3)\xa0 Portable        4)\xa0 Platform Independent        5)\xa0 Secured        6)\xa0 Robust        7) \xa0Architecture Neutral        8)\xa0 Dynamic        9)\xa0 High Performance        10)\xa0 Multi-Threaded        11)\xa0 Distributed"
 What do you understand by Java virtual machine?," JVM (Java Virtual Machine) is an abstract machine. It is a specification that provides runtime environment in which java bytecode can be executed.JVMs are available for many hardware and software platforms (i.e. JVM is platform dependent).        1)\xa0 A specification where working of Java Virtual Machine is specified. But implementation provider is independent to choose the algorithm. Its implementation has been provided by Sun and other companies.        2)\xa0 An implementation Its implementation is known as JRE (Java Runtime Environment).        3)\xa0 Runtime Instance Whenever you write java command on the command prompt to run the java class, an instance of JVM is created."
" What is the difference between JDK, JRE, and JVM?"," Following are the differences between JDK, JRE, and JVM:        \xa0 JDK :-Java Development Kit is the core component of Java Environment and provides all the tools, executables and binaries required to compile, debug and execute a Java Program. JDK is a platform-specific software and thatâ€™s why we have separate installers for Windows, Mac, and Unix systems.        \xa0 JVM :-JVM is the heart of Java programming language. When we run a program, JVM is responsible for converting Byte code to the machine specific code. JVM is also platform dependent and provides core java functions like memory management, garbage collection, security etc.        \xa0 JRE :-JRE is the implementation of JVM, it provides a platform to execute java programs. JRE consists of JVM and java binaries and other classes to execute any program successfully. JRE doesnâ€™t contain any development tools like java compiler, debugger etc."
How many types of memory areas are allocated by JVM?," There are six main types of memory areas that are allocated by JVM. These include:        1.\xa0 Class loader â€“ a subsystem of JVM that is used to load class files.        2.\xa0 Class (Method) Area â€“ stores per-class structures such as the runtime constant pool, field and method data, the code for methods.        3.\xa0  Heap - is the runtime data area in which objects are allocated.        4.\xa0 Stack - stores frames and holds local variables and partial results. Participates in method invocation and return.        5.\xa0 Program Counter (PC) Register - contains the address of the JVM instruction that is currently being executed.        6. \xa0Native Method Stack - contains all native methods used in the application."
 What is JIT compiler?," It is used to improve performance. JIT compiles parts of the bytecode that have similar functionality at the same time, and hence reduces the amount of time needed for compilation. Here the term â€œcompilerï¿½ refers to a translator from the instruction set of a Java virtual machine (JVM) to the instruction set of a specific CPU."
 What are the main differences between the Java platform and other platforms?," The three major differences between Java platform and most other platforms are:        1) \xa0It is a software-based platform while others can be hardware based or hardware software platform.        2)\xa0Java supports WORA (Write once run anywhere),which means it is platform independent, but many of other platforms does not provide such feature.        3) \xa0The Java API enable users to write java program, which are converted to byte code by interpreter and then into machine language by complier, whereas other platform provide either complier or interpreter."
 What is classloader?," We know that Java Program runs on Java Virtual Machine (JVM). When we compile a Java Class, it transforms it in the form of bytecode that is platform and machine independent compiled program and stores it as a .class file. After that when we try to use a Class, Java ClassLoader loads that class into memory.         1)\xa0 Bootstrap Class Loader :It loads JDK internal classes, typically loads rt.jar and other core classes for example java.lang.* package classes.        2)\xa0 Extensions Class Loader :It loads classes from the JDK extensions directory, usually $JAVA_HOME/lib/ext directory.        3)\xa0 System Class Loader :It loads classes from the current classpath that can be set while invoking a program using -cp or -classpath command line options."
 What is the default value of the local variables?," The local variables are not initialized to any default value, neither primitives nor object references."
 What are the various access specifiers in Java?," You must have seen public, private and protected keywords while practising java programs, these are called access modifiers. An access modifier restricts the access of a class, constructor, data member and method in another class. In java we have four access modifiers:        1)\xa0 Default:When we do not mention any access modifier, it is called default access modifier. The scope of this modifier is limited to the package only. This means that if we have a class with the default access modifier in a package, only those classes that are in this package can access this class. No other class outside this package can access this class.        2)\xa0Private:Methods, variables, and constructors that are declared private can only be accessed within the declared class itself.Private access modifier is the most restrictive access level. Class and interfaces cannot be private.Variables that are declared private can be accessed outside the class, if public getter methods are present in the class.        3)\xa0Public:A class, method, constructor, interface, etc. declared public can be accessed from any other class. Therefore, fields, methods, blocks declared inside a public class can be accessed from any class belonging to the Java Universe.        4)\xa0Protected:Variables, methods, and constructors, which are declared protected in a superclass can be accessed only by the subclasses in other package or any class within the package of the protected members' class."
 Can we Overload or Override static methods in java ?,"Can we overload static methods?:- The answer is â€˜Yesâ€™. We can have two ore more static methods with same name, but differences in input parameters.Can we Override static methods in java? :- We can declare static methods with same signature in subclass, but it is not considered overriding as there wonâ€™t be any run-time polymorphism. Hence the answer is â€˜Noâ€™. Static methods cannot be overridden because method overriding only occurs in the context of dynamic (i.e. runtime) lookup of methods. Static methods (by their name) are looked up statically (i.e. at compile-time)."
 What are the advantages of Packages in Java?,There are various advantages of defining packages in Java.        1)\xa0Packages avoid the name clashes.        2)\xa0The Package provides easier access control.        3)\xa0We can also have the hidden classes that are not visible outside and used by the package.        4)\xa0It is easier to locate the related classes.
 What is object-oriented paradigm?," It is a programming paradigm based on objects having data and methods defined in the class to which it belongs. Object-oriented paradigm aims to incorporate the advantages of modularity and reusability. Objects are the instances of classes which interacts with one another to design applications and programs. There are the following features of the object-oriented paradigm.        1)\xa0 Follows the bottom-up approach in program design.        2)\xa0 Focus on data with methods to operate upon the objects data        3)\xa0Includes the concept like Encapsulation and abstraction which hides the complexities from the user and show only functionality.        4)\xa0Implements the real-time approach like inheritance, abstraction, etc.        5)\xa0The examples of the object-oriented paradigm are C++, Simula, Smalltalk, Python, C#, etc."
 What is the constructor?,A constructor in Java is a special method that is used to initialize objects. The constructor is called when an object of a class is created.
 Does constructor return any value?,"yes, The constructor implicitly returns the current instance of the class. (You can't use an explicit return type with the constructor)"
 How many types of constructors are used in Java?," Based on the parameters passed in the constructors, there are two types of constructors in Java.        1)\xa0 Default Constructor: A Constructor with no parameters is called as Default Constructor or no-arg constructor. In the below code we have created the no-arg constructor which gets called during the time of object creation.Example: (Abc a = new Abc())        2)\xa0Parameterized Constructor:A Constructor which has parameters in it called as Parameterized Constructors, the Parameterized constructor is used to assign different values for the different objects.  In the below example we have a parameterized constructor for the car class which set the value for the parameter â€œColorï¿½ Example: Abc(String Color)"
 What is the static block?," Static block is a set of statements, which will be executed by the JVM before execution of main method.        At the time of class loading if we want to perform any activity we have to define that activity inside static block because this block execute at the time of class loading."
 What is the static method?,         1)\xa0A static method belongs to the class rather than the object.        2)\xa0There is no need to create the object to call the static methods.        3)\xa0A static method can access and change the value of the static variable.
 What are the main uses of this keyword?,There are the following uses of this keyword.        1)\xa0this can be used to refer to the current class instance variable.        2)\xa0 this can be used to invoke current class method (implicitly)        3) \xa0this() can be used to invoke the current class constructor.        4)\xa0this can be passed as an argument in the method call.        5)\xa0 this can be passed as an argument in the constructor call.        6)\xa0 this can be used to return the current class instance from the method.
 Which class is the superclass for all the classes?,The object class is the superclass of all other classes in Java.
 What is aggregation?,"Aggregation in Java is a relationship between two classes that is best described as a ""has-a"" and ""whole/part"" relationship. It is a more specialized version of the association relationship. The aggregate class contains a reference to another class and is said to have ownership of that class. Each class referenced is considered to be part-of the aggregate class."
 What is composition?,Composition in java is the design technique to implement has-a relationship in classes. We can use java inheritance or Object composition in java for code reuse.Java composition is achieved by using instance variables that refers to other objects. For example:- A Person has a Job.
 Why does Java not support pointers?,The pointer is a variable that refers to the memory address. They are not used in Java because they are unsafe(unsecured) and complex to understand.
 What are the main uses of the super keyword?,The main uses of the super keyword is :-        1) super.< variable_name > refers to the variable of variable of parent class.        2) super() invokes the constructor of immediate parent class.        3) super.< method_name > refers to the method of parent class.
 What is the difference between the final method and abstract method?,"Final method is a method that is marked as final, i.e. it cannot be overridden anymore. Just like final class cannot be inherited anymore.        Abstract method, on the other hand, is an empty method that is ought to be overridden by the inherited class. Without overriding, you will quickly get compilation error."
 What is the difference between compile-time polymorphism and runtime polymorphism?,"There are the following differences between compile-time polymorphism and runtime polymorphism.compile-time polymorphism:-        1)In compile-time polymorphism, call to a method is resolved at compile-time.        2) It is also known as static binding, early binding, or overloading.        3) Overloading is a way to achieve compile-time polymorphism in which, we can define multiple methods or constructors with different signatures.        4) It provides fast execution because the type of an object is determined at compile-time.Run-time polymorphism:-        1)In runtime polymorphism, call to an overridden method is resolved at runtime.        2)It is also known as dynamic binding, late binding, overriding, or dynamic method dispatch.        3) Overriding is a way to achieve runtime polymorphism in which, we can redefine some particular method or variable in the derived class. By using overriding, we can give some specific implementation to the base class properties in the derived class.        4) It provides slower execution as compare to compile-time because the type of an object is determined at run-time."
 What is the difference between static binding and dynamic binding?,"There are the following differences between static binding and dynamic binding.Static binding:-        1) Static binding in Java occurs during Compile time.         2) private, final and static methods and variables uses static binding and bonded by compiler.        3) Static binding uses Type(Class in Java)  information for binding.Dynamic binding:-        1) Dynamic binding occurs during Runtime.        2)virtual methods are bonded during runtime based upon runtime object.        3) Dynamic binding uses Object to resolve binding."
 What is the abstraction?,Data Abstraction is the property by virtue of which only the essential details are displayed to the user.The trivial or the non-essentials units are not displayed to the user.Example: A car is viewed as a car rather than its individual components.
 What is the abstract class?,"Abstract class in Java is similar to interface except that it can contain default method implementation. An abstract class can have an abstract method without body and it can have methods with implementation also.Abstract class in Java Important Points        1) abstract keyword is used to create an abstract class in java.        2) Abstract class in java canâ€™t be instantiated.        3) We can use abstract keyword to create an abstract method, an abstract method doesnâ€™t have body.        4) If a class have abstract methods, then the class should also be abstract using abstract keyword, else it will not compile.', '1. What is C language?Answer:-  C is a general purpose, procedural programming language and developed at Bell labs by Dennis Ritchie in 1972-73. It is widely used programming language particularly used for system programming because it produces code that runs nearly as fast as the code written in assembly language. Today most of the operating systems are written in C language. C is a middle level language since it has feature of both low and high level language.', '2. What are the features of C programming language?Answer:- Fast & Efficient: Programs Written in C are efficient and fast. This is due to its variety of data type and powerful operators.Portable: C can run on any machine with little or no modifications.Middle Level Language: It include feature of both high and low level programming language.Structured: It divides the problem into smaller modules called functions or procedures.Extensible: C is an extensible language as it can adopt new features.', '3. Explain some real life applications of C programming language?Answer:- Some of the real life applications of C programming language are -             1.  Operation System             2.  Development of new language            3.  Embedded System            4.  Computation Platforms            5.  Graphics and Games', '4. What are the fundamental data types in C programming?Answer:- integer(int), floating point(float), character(char) and void.', '5. What are the return values of printf and scanf?Answer:- printf() returns total number of characters printed and if there is some error then it returns a negative value.scanf() returns the total number of input values that are scanned and if there is some input failure or error then it returns EOF.', '6. What is difference between i++ and ++i?Answer:- i++ is known as Post Increment in which first value is used and then incremented whereas ++i is called Pre Increment in which value is first incremented and then used.', '7. What is the use of static variable in c?Answer:- A static variable is a variable whose lifetime doesnâ€™t end with a function call where it is declared. All calls to the function share the same copy of static variables. For example static variables can be used to count the number of times a function is called. Also, static variables get the default value as 0. It is initialized only once in the memory heap to reduce the memory usage.', '8. What is volatile keyword?Answer:- The volatile keyword is intended to prevent the compiler from applying any optimizations on variable that can change in ways that cannot be determined by the compiler. Variables declared as volatile are omitted from optimization because their values can be changed by code outside the scope of current code at any time.', ""9. How negative values are stored in c?Answer:- Negative numbers are stored in 2's compliment form."", ""10. What is a dangling pointer?Answer:- Dangling pointer is a pointer variable which holds the address (integer value) of that memory location which is removed or doesn't exist or you can say a pointer pointing to a memory location that has been deleted is called dangling pointer."", '11. Can a program be compiled without a main() function?Answer:- Yes, we can compile a C program without main function but it will not be exceuted as its execution starts from the main function only.', '12. What is lvalue and rvalue?Answer:- The value which appears on left side of assignment operator is called as lvalue while which appears on right side is called rvalue.', '13. What are command line arguments?Answer:-Command line argument is used to pass the values to the main() function of any program. By command line argument we are actually passing values to our C program when they are executed. Command line arguments are given after the name of the program in command line shell of Operating Systems.', '14. What is recursion?Answer:- Recursion is the process in which function call itself. Recursive functions are very useful to solve many mathematical problems.', '15. What is the difference between malloc and calloc? Answer:- Both malloc and calloc are used in C programming language for dynamic memory allocation they obtain blocks of memory dynamically. The fundamental difference that exists between malloc and calloc in C language is calloc() requires two arguments while malloc() require one argument. malloc() doesnâ€™t initialize the allocated memory while calloc() allocates the memory and also initializes the allocated memory block to zero', '16. What is the difference between Call by Value and Call by Reference?Answer:- There are two ways to pass arguments or parameters to function calls - call by value and call by reference. In call by value the value of the actual parameters are copied into the formal parameters and operations are applied on copied value not on original value while in call by reference the address of the variables are passed into the function call as the actual parameter and operations are performed on actual values i.e actual values are altered.', '17. What are header files and its uses?Answer:- Header files are also known as library files. They contain two essential things: the definitions and prototypes of functions being used in a program. Header Files are included in the beginning of the program. It is a predefined code and we have to simply include the file. It has .h extension. It contains C declarations and macro definition. For eg - stdio.h', '18. What are the different file extensions involved when programming in C?Answer:- Source code is saved with .c extension and when compiled it generate .obj file and .exe file. Also we have header files with extension .h', '19. What is the difference between functions abs() and fabs()?Answer:- Both funtion are used to get the absolute value only difference is that abs() is used for integer values while fabs() is used for floating numbers.', '20. What are actual and formal parameters?Answer:- Actual parameters are the parameters that are passed with function call while parameters or arguments which are mentioned in the definition of the function is called formal arguments.', '21. What is the difference between structure and union?Answer:- Structure and union both are user defined data types which contains variables of different data types. Both of them have same syntax for definition, declaration of variables and for accessing members. The only difference is that in a structure all members gets memory allocated while in union compiler allocates the memory for the largest of all members and in a union all members have offset zero from the base and only one variable can be used at a time in union.', '22. What is the difference between getchar and getch?Answer:- getchar() is a standard function that gets a character from the stdin while getch() is non-standard it gets a character from the keyboard (which may be different from stdin) and does not echo it.', '23. What is type casting in c? Answer:- Type casting is a way to convert a variable from one data type to another data type. For example you can convert double value to integer. Typecasting is of 2 types implicit and explicit. Implicit conversions do not require any operator for converted. They are automatically performed when a value is copied to a compatible type in the program. The type conversion performed by the programmer by posing the data type of the expression of specific type is known as explicit type conversion.', '24. What is a void pointer? Answer:- A Void pointer is a generic pointer in programming. If the pointer type is unknown, we make use of the void pointer. A void pointer is a pointer that has no associated data type with it. A void pointer can hold address of any type and can be typcasted to any type.', '25. Explain pointers in C programming?Answer:- Pointers in C Programming Language is a variable that stores the address of another variable. To access address of a variable to a pointer, we use the unary operator & (ampersand) that returns the address of that variable. For example &q gives us address of variable q. A Pointer in C is used to allocate memory dynamically i.e. at run time.  * is used to denote that p is pointer variable and not a normal variable.', '26. What is the use of a semicolon (;) at the end of every program statement?Answer:- Semicolon is a statement terminator in C to help the parser figure out where the statement ends since, by default statements in C can have any number of lines.', '27. What is the difference between declaration and definition of a function?            Answer:- Declarations tell the compiler that a program element or name exists. A declaration introduces one or more names into a program. Declarations can occur more than once in a program. Function declaration declares the name of the function and the type of what it returns. Definitions specify what code or data the name describes. A name must be declared before it can be used. A function definition defines the function body, and defines what happens when the function is called.', '28. What is memory leak?Answer:- In computer science, a memory leak is a particular type of unintentional memory consumption by a computer program where the program fails to release memory when no longer needed. This condition is normally the result of a bug in a program that prevents it from freeing up memory that it no longer needs.', '29. What is scope of variable in c?Answer:- A scope is a region for the variable where the variable can be accessible. Global variables hold their values throughout the lifetime of the program and they can be accessed inside any of the functions defined for the program. while variables that are declared inside a function or block are called local variables.', '30. What is the difference between near, far and huge pointers?Answer:- near, far and huge pointers were extensions to C to allow the programmer to give hints to the compiler about how to implement a pointer in the horrific segmented memory architecture of the Intel 8086/8088 (and 80186) CPUs.  Those CPUs used two 16 bit registers (and variously sized offsets) to generate a 20-bit address.Near pointer is used to store 16 bit addresses means within current segment on a 16 bit machine. The limitation is that we can only access 64kb of data at a time. A far pointer is typically 32 bit that can access memory outside current segment. To use this, compiler allocates a segment register to store segment address, then another register to store offset within current segment. Huge pointer is also typically 32 bit and can access outside segment. In case of far pointers, a segment is fixed. In far pointer, the segment part cannot be modified, but in Huge it can be.', ""1. What is Software Engineering?Answer:-  IEEE defines 'Software Engineering' as the application of a systematic, disciplined, quantifiable approach to the development, operation, and maintenance of software. IT industries adopt this approach to deliver software products and services to their clients."", '2. What are the categories of software?Answer:- There are various categories of software, the majority of which are: System software, Application software, Embedded software, Web applications, Artificial intelligence software, and Scientific Software.', '3. What is testing?Answer:- Testing is a process of executing a program with the intent of finding an error.', '4. What is white box testing?Answer:- White box testing is a test case design method that uses the control structure of the procedural design to derive test cases. It is otherwise called as structural testing.', '5. What is Black box testing?Answer:- Black box testing is a test case design method that focuses on the functional requirements of the software. It is otherwise called as functional testing.', '6. What are verification and validation? Answer:- Verification: Verification refers to the set of activities that software correctly implements a specific function. Validation: Validation refers to the set of activities that ensure that the software that has been built is traceable to customer requirements.', '7.  What is debugging?Answer:- Debugging is the process that results in the removal of the error. It occurs as a consequence of successful testing.', '8.  Define cyclomatic complexity?Answer:- Cyclomatic complexity is a software metric that provides a quantitative measure of the logical complexity of a program.', '9. What is error tracking?Answer:- Error tracking is an activity that provides a means for assessing the status of a current project.', '10. What is CASE tools?Answer:- Computer-Aided Software Engineering - CASE tools assist software engineering managers and practitioners in every activity associated with the software process. They automate project management activities to manage all work products produced throughout the process and assist the engineers in their analysis, design, coding, and test work.', '11. What is data design?Answer:- Data design transforms the information domain model created during analysis into the data structures that will be required to implement the software.', '12. Define Cohesion and Coupling?Answer:- Cohesion: Cohesion is a measure of the relative functional strength of a module.Coupling: Coupling is a measure of the relative interdependence among module.', '13. What are the different types of cohesion?Answer:- There are different types of cohesion: Coincidental Cohesion, Logical Cohesion Temporal Cohesion, Procedural Cohesion, Communicational Cohesion.', '14. What are the different types of coupling?Answer:- There are different types of coupling : Data coupling, Stamp coupling, Control coupling, External Coupling, Common Coupling, Content coupling.', '15. What is user interface design?Answer:- User interface design creates effective communication,and a medium between a human and a computer.', '16. What is meant by specification?Answer:- A specification can be a written document, a graphical model, a formal mathematical model, a collection of usage scenarios, a prototype, or any combination of these.', '17. Define process?Answer:- A series of steps involving activities, constraints, and resources that produce an intended output of some kind is known as process.', '18. How the spiral model works?Answer:- The spiral model is an evolutionary software process model that couples the iterative nature of prototyping with the controlled and systematic aspects of the waterfall lifecycle model. It also has an emphasis on use or risk management techniques.', '19. What is winwin spiral model?Answer:- Winwin spiral model defines a set of negotiation activities, at the beginning of each pass around the spiral. The best negotiations strive for a win-win result.', '20. Mention the various views in the system engineering hierarchy?Answer:- The various views in system engineering hierarchy from top to bottom in order are: World View, Domain View, Element View, and Detailed view.', '21. What is the software requirements definition?Answer:- A software requirements definition is an abstract description of the services which the system should provide and the constraints under which the system must operate.', '22. What is SDLC?Answer:- A software cycle deals with various parts and phases from planning to testing and deploying. All these activities are carried out in different ways, as per the needs. Each way is known as a Software Development Lifecycle Model (SDLC). Some examples are:  Waterfall model, Incremental/Iterative model, and Spiral model.', '23. What are data acquisition system?Answer:- Systems that collect data from sensors for subsequent processing and analysis is termed as Data acquisition systems. Data collection process and processing processes may have different periods and deadlines.', '24. Define software configuration model Answer:- SCM is the art of identifying, organizing, and controlling modifications to the software being built by a programming team. It is an umbrella activity that is applied throughout the software process.', '25. What are the SCM activities? Answer:- SCM activities are developed to :            1. Identify change Control change.            2. Ensure that change is being properly implemented.            3. Report changes to others who may have an interest.', '26. What is meant by loop testing?Answer:- Loop testing is a white box testing technique that focuses exclusively on the validity of loop constructs. This technique can be applied to simple loops, nested loops, concatenated loops, and unstructured loops.', '27. What is meant by smoke testing?            Answer:- Smoke testing is an integration testing approach that is commonly used when ""shrink wrapped"" software products are being developed.', ""28. 28. What are alpha and beta tests?Answer:- Alpha test: Alpha test is the test that is conducted at the developer's site by a customer. Beta test: Beta test is the test that is conducted at one or more customer sites by the end-user of the software."", '29. What is meant by system testing?Answer:- System testing is actually a series of different tests whose primary purpose is to fully exercise the computer-based system. It verifies whether the system elements have been properly integrated and perform the allocated functions.', '30. Mention the categories of debugging approaches?Answer:-There are three categories of debugging approaches as follows: Brute-force, Backtracking, and Cause elimination.', '31. Define metric?Answer:- IEEE93 defines as a quantitative measure of the degree to which a system, component, or process possesses a given attribute. Metrics are important measures of project parameters that help predict measure and control projects. Metrics also help in estimation.', '32. What is adaptive maintenance?Answer:-Adaptive maintenance is the maintenance to adapt the software to a different operating environment. It involves changing a system so that it operates in a different environment from its initial implementation.', ""33. What is the user requirements?Answer:-User requirements should describe functional and non-functional requirements so that they are understandable by system users who don't have detailed technical knowledge. User requirements are defined using natural language, tables, and diagrams."", '34. What is the test scenario?Answer:- The test scenario is the hypothetical story to test the particular functionality of an application. It serves as an input to functional testing. For the test scenario, we need use case.', '35. Define prototype?Answer:- Prototype is an initial version of a software system that is used to demonstrate concepts, try out design options, and generally find out more about the problem and its possible solutions.', '36. What is the system image?Answer:- The system image combines the outward manifestation of the computer-based system, coupled with all supporting information that describes system syntax and semantics', '37. what is the transform mapping? Answer:-Transform mapping is a set of design steps that allows a DFD with transform flow characteristics to be mapped into a specific architectural style.', '38. What is the traceability matrix?Answer:- Traceability matrix is a document in which we map the test cases with the requirements. In general, we check whet er the application works as per requirements or whether we had covered all the required functionality through test cases.', '39. What is Agile?Answer:-Agile software development is a group of software development methods in which requirements and solutions evolve through collaboration between self-organizing, cross-functional teams. It promotes adaptive planning, evolutionary development, early delivery, continuous improvement, and encourages rapid and flexible response to change.', '40.  What are the advantages of agile?Answer:-The advantages of agile are :            1. Time to Market: Early and regular releases.            2. Revenue: Early Return On Investment (ROI).            3. High Quality and Productivity: Testing is integrated throughout the cycle.            4. Business Engagement/Customer Satisfaction: Active involvement of a business owner and the high visibility of the product and progress.            5. Motivated Teams: Active involvement & collaboration make Agile development more enjoyable', '41. What is Quality Control?Answer:- Quality Control focus is on the Product.QC measures a product against the existence of a required attribute. Major QC activity is identifying defects and correcting them (Rework).', '42. What is Quality Assurance?Answer:-  Quality Assurance focus is on the Process rather than Product. QA ensures ""Fitness for Purpose"". Building process guidelines, checklists, templates, Training activities.', '43. What is Cost of Quality?Answer:- Cost of Quality (CoQ) is a measure of costs (effort) incurred in ensuring quality. CoQ is typically measured as the percentage of effort spent to ensure quality compared to total project effort. Thus CoQ of 31.38% means that compared to the overall effort, the team has spent 31.38% of the effort to ensure quality.            CoQ = ((Prevention cost + Appraisal cost + Failure cost) x 100) / Total Project effort', '44. What is the Cost of Correcting Defects?Answer:-   Defects can get introduced in any of the following stages: Requirements Analysis, Design and Build. It is important to identify the defects and fix them before the release of the software. Accordingly, there is effort and cost involved in fixing the defects.', ""45. What are the advantages and disadvantages of Black-Box Testing?Answer:-   The following table lists the advantages and disadvantages of black-box testing.            AdvantagesDisadvantagesWell suited and efficient for large code segments.Limited coverage, since only a selected number of test scenarios is actually performed.Code access is not required.Inefficient testing, tester only has limited knowledge about an application.Clearly separates user's perspective from the developer's perspective through visibly defined roles.Blind coverage, since the tester cannot target specific code segments or errorprone areas.Large numbers of moderately skilled testers can test the application with no knowledge of implementation, programming language, or operating systems.The test cases are difficult to design."", '46. What are the advantages and disadvantages of White-Box Testing?Answer:-   The following table lists the advantages and disadvantages of White-Box Testing.            AdvantagesDisadvantagesDirect statement by statement testingVast resource neededCheck algorithm are correctly defined and coded.Cannot test performance in terms of availability, reliability, load durability.Adherence to coding standards.Difficult to maintainMeasure coding qualityCosts are high', '47. What is the difference between validation and verification?Answer:-   The following table lists the difference between validation and verification.            ValidationVerificationValidation is a dynamic mechanism of validating and testing the actual product.Verification is a static practice of verifying documents, design, code, and program.It does involve executing the code.It does not involve executing the code.It is computer-based execution of program.It is human-based checking of documents and files.Validation to check whether the software meets the customer expectation and requirement.Verification is to check whether the software conforms to the specification.It can catch errors that verification cannot catch. It is a high-level exercise.It can catch errors that validation cannot catch. It is a low-level exercise.', '48. What is the difference between cohesion and coupling?Answer:-   The following table lists the difference between cohesion and coupling.            CohesionCouplingCohesion is the concept of intra moduleCoupling is the concept of inter moduleCohesion represents the relationship within moduleCoupling represents the relationship between moduleIncreasing in cohesion is good for software.Increasing in coupling is avoided for software.Highly cohesive give the best softwareLoosely coupling give the best softwareModule focus on the single thingModule is connected to the other module.', '49. What is the difference between Alpha and Beta testing?Answer:-   The following table lists the difference between Alpha and Beta testing.            Alpha TestingBeta TestingPerform by developerPerform by customerConducted for software applicationConducted for software productPerformed in virtual environmentPerformed in a real environmentInvolves both white box and black box testingInvolves black box testingIt is not open to the market and publicIt is open to the market and public', '50. What is the difference between Quality Control and Quality Assurance?Answer:-   The following table lists the difference between Quality Control and Quality Assurance.            Quality AssuranceQuality ControlQA is a managing toolQC is a correcting toolQA is process orientedQC is product orientedQA use proactive strategyQC use reactive strategyQA use for prevention of defectsQC use for detection of defectsEveryone is responsibleTesting team is responsible"
 What is C language?,"  C is a general purpose, procedural programming language and developed at Bell labs by Dennis Ritchie in 1972-73. It is widely used programming language particularly used for system programming because it produces code that runs nearly as fast as the code written in assembly language. Today most of the operating systems are written in C language. C is a middle level language since it has feature of both low and high level language."
 What are the features of C programming language?, Fast & Efficient: Programs Written in C are efficient and fast. This is due to its variety of data type and powerful operators.Portable: C can run on any machine with little or no modifications.Middle Level Language: It include feature of both high and low level programming language.Structured: It divides the problem into smaller modules called functions or procedures.Extensible: C is an extensible language as it can adopt new features.
 Explain some real life applications of C programming language?, Some of the real life applications of C programming language are -             1.  Operation System             2.  Development of new language            3.  Embedded System            4.  Computation Platforms            5.  Graphics and Games
 What are the fundamental data types in C programming?," integer(int), floating point(float), character(char) and void."
 What are the return values of printf and scanf?, printf() returns total number of characters printed and if there is some error then it returns a negative value.scanf() returns the total number of input values that are scanned and if there is some input failure or error then it returns EOF.
 What is difference between i++ and ++i?, i++ is known as Post Increment in which first value is used and then incremented whereas ++i is called Pre Increment in which value is first incremented and then used.
 What is the use of static variable in c?," A static variable is a variable whose lifetime doesnâ€™t end with a function call where it is declared. All calls to the function share the same copy of static variables. For example static variables can be used to count the number of times a function is called. Also, static variables get the default value as 0. It is initialized only once in the memory heap to reduce the memory usage."
 What is volatile keyword?, The volatile keyword is intended to prevent the compiler from applying any optimizations on variable that can change in ways that cannot be determined by the compiler. Variables declared as volatile are omitted from optimization because their values can be changed by code outside the scope of current code at any time.
 How negative values are stored in c?, Negative numbers are stored in 2's compliment form.
 What is a dangling pointer?, Dangling pointer is a pointer variable which holds the address (integer value) of that memory location which is removed or doesn't exist or you can say a pointer pointing to a memory location that has been deleted is called dangling pointer.
 Can a program be compiled without a main() function?," Yes, we can compile a C program without main function but it will not be exceuted as its execution starts from the main function only."
 What is lvalue and rvalue?, The value which appears on left side of assignment operator is called as lvalue while which appears on right side is called rvalue.
 What are command line arguments?,Command line argument is used to pass the values to the main() function of any program. By command line argument we are actually passing values to our C program when they are executed. Command line arguments are given after the name of the program in command line shell of Operating Systems.
 What is recursion?, Recursion is the process in which function call itself. Recursive functions are very useful to solve many mathematical problems.
 What is the difference between malloc and calloc?, Both malloc and calloc are used in C programming language for dynamic memory allocation they obtain blocks of memory dynamically. The fundamental difference that exists between malloc and calloc in C language is calloc() requires two arguments while malloc() require one argument. malloc() doesnâ€™t initialize the allocated memory while calloc() allocates the memory and also initializes the allocated memory block to zero
 What is the difference between Call by Value and Call by Reference?, There are two ways to pass arguments or parameters to function calls - call by value and call by reference. In call by value the value of the actual parameters are copied into the formal parameters and operations are applied on copied value not on original value while in call by reference the address of the variables are passed into the function call as the actual parameter and operations are performed on actual values i.e actual values are altered.
 What are header files and its uses?, Header files are also known as library files. They contain two essential things: the definitions and prototypes of functions being used in a program. Header Files are included in the beginning of the program. It is a predefined code and we have to simply include the file. It has .h extension. It contains C declarations and macro definition. For eg - stdio.h
 What are the different file extensions involved when programming in C?, Source code is saved with .c extension and when compiled it generate .obj file and .exe file. Also we have header files with extension .h
 What is the difference between functions abs() and fabs()?, Both funtion are used to get the absolute value only difference is that abs() is used for integer values while fabs() is used for floating numbers.
 What are actual and formal parameters?, Actual parameters are the parameters that are passed with function call while parameters or arguments which are mentioned in the definition of the function is called formal arguments.
 What is the difference between structure and union?," Structure and union both are user defined data types which contains variables of different data types. Both of them have same syntax for definition, declaration of variables and for accessing members. The only difference is that in a structure all members gets memory allocated while in union compiler allocates the memory for the largest of all members and in a union all members have offset zero from the base and only one variable can be used at a time in union."
 What is the difference between getchar and getch?, getchar() is a standard function that gets a character from the stdin while getch() is non-standard it gets a character from the keyboard (which may be different from stdin) and does not echo it.
 What is type casting in c?, Type casting is a way to convert a variable from one data type to another data type. For example you can convert double value to integer. Typecasting is of 2 types implicit and explicit. Implicit conversions do not require any operator for converted. They are automatically performed when a value is copied to a compatible type in the program. The type conversion performed by the programmer by posing the data type of the expression of specific type is known as explicit type conversion.
 What is a void pointer?," A Void pointer is a generic pointer in programming. If the pointer type is unknown, we make use of the void pointer. A void pointer is a pointer that has no associated data type with it. A void pointer can hold address of any type and can be typcasted to any type."
 Explain pointers in C programming?," Pointers in C Programming Language is a variable that stores the address of another variable. To access address of a variable to a pointer, we use the unary operator & (ampersand) that returns the address of that variable. For example &q gives us address of variable q. A Pointer in C is used to allocate memory dynamically i.e. at run time.  * is used to denote that p is pointer variable and not a normal variable."
 What is the use of a semicolon (;) at the end of every program statement?," Semicolon is a statement terminator in C to help the parser figure out where the statement ends since, by default statements in C can have any number of lines."
 What is the difference between declaration and definition of a function?," Declarations tell the compiler that a program element or name exists. A declaration introduces one or more names into a program. Declarations can occur more than once in a program. Function declaration declares the name of the function and the type of what it returns. Definitions specify what code or data the name describes. A name must be declared before it can be used. A function definition defines the function body, and defines what happens when the function is called."
 What is memory leak?," In computer science, a memory leak is a particular type of unintentional memory consumption by a computer program where the program fails to release memory when no longer needed. This condition is normally the result of a bug in a program that prevents it from freeing up memory that it no longer needs."
 What is scope of variable in c?, A scope is a region for the variable where the variable can be accessible. Global variables hold their values throughout the lifetime of the program and they can be accessed inside any of the functions defined for the program. while variables that are declared inside a function or block are called local variables.
" What is the difference between near, far and huge pointers?"," near, far and huge pointers were extensions to C to allow the programmer to give hints to the compiler about how to implement a pointer in the horrific segmented memory architecture of the Intel 8086/8088 (and 80186) CPUs.  Those CPUs used two 16 bit registers (and variously sized offsets) to generate a 20-bit address.Near pointer is used to store 16 bit addresses means within current segment on a 16 bit machine. The limitation is that we can only access 64kb of data at a time. A far pointer is typically 32 bit that can access memory outside current segment. To use this, compiler allocates a segment register to store segment address, then another register to store offset within current segment. Huge pointer is also typically 32 bit and can access outside segment. In case of far pointers, a segment is fixed. In far pointer, the segment part cannot be modified, but in Huge it can be."
 What is Software Engineering?,"  IEEE defines 'Software Engineering' as the application of a systematic, disciplined, quantifiable approach to the development, operation, and maintenance of software. IT industries adopt this approach to deliver software products and services to their clients."
 What are the categories of software?," There are various categories of software, the majority of which are: System software, Application software, Embedded software, Web applications, Artificial intelligence software, and Scientific Software."
 What is testing?, Testing is a process of executing a program with the intent of finding an error.
 What is white box testing?, White box testing is a test case design method that uses the control structure of the procedural design to derive test cases. It is otherwise called as structural testing.
 What is Black box testing?, Black box testing is a test case design method that focuses on the functional requirements of the software. It is otherwise called as functional testing.
 What are verification and validation?, Verification: Verification refers to the set of activities that software correctly implements a specific function. Validation: Validation refers to the set of activities that ensure that the software that has been built is traceable to customer requirements.
  What is debugging?, Debugging is the process that results in the removal of the error. It occurs as a consequence of successful testing.
  Define cyclomatic complexity?, Cyclomatic complexity is a software metric that provides a quantitative measure of the logical complexity of a program.
 What is error tracking?, Error tracking is an activity that provides a means for assessing the status of a current project.
 What is CASE tools?," Computer-Aided Software Engineering - CASE tools assist software engineering managers and practitioners in every activity associated with the software process. They automate project management activities to manage all work products produced throughout the process and assist the engineers in their analysis, design, coding, and test work."
 What is data design?, Data design transforms the information domain model created during analysis into the data structures that will be required to implement the software.
 Define Cohesion and Coupling?, Cohesion: Cohesion is a measure of the relative functional strength of a module.Coupling: Coupling is a measure of the relative interdependence among module.
 What are the different types of cohesion?," There are different types of cohesion: Coincidental Cohesion, Logical Cohesion Temporal Cohesion, Procedural Cohesion, Communicational Cohesion."
 What are the different types of coupling?," There are different types of coupling : Data coupling, Stamp coupling, Control coupling, External Coupling, Common Coupling, Content coupling."
 What is user interface design?," User interface design creates effective communication,and a medium between a human and a computer."
 What is meant by specification?," A specification can be a written document, a graphical model, a formal mathematical model, a collection of usage scenarios, a prototype, or any combination of these."
 Define process?," A series of steps involving activities, constraints, and resources that produce an intended output of some kind is known as process."
 How the spiral model works?, The spiral model is an evolutionary software process model that couples the iterative nature of prototyping with the controlled and systematic aspects of the waterfall lifecycle model. It also has an emphasis on use or risk management techniques.
 What is winwin spiral model?," Winwin spiral model defines a set of negotiation activities, at the beginning of each pass around the spiral. The best negotiations strive for a win-win result."
 Mention the various views in the system engineering hierarchy?," The various views in system engineering hierarchy from top to bottom in order are: World View, Domain View, Element View, and Detailed view."
 What is the software requirements definition?, A software requirements definition is an abstract description of the services which the system should provide and the constraints under which the system must operate.
 What is SDLC?," A software cycle deals with various parts and phases from planning to testing and deploying. All these activities are carried out in different ways, as per the needs. Each way is known as a Software Development Lifecycle Model (SDLC). Some examples are:  Waterfall model, Incremental/Iterative model, and Spiral model."
 What are data acquisition system?, Systems that collect data from sensors for subsequent processing and analysis is termed as Data acquisition systems. Data collection process and processing processes may have different periods and deadlines.
 Define software configuration model," SCM is the art of identifying, organizing, and controlling modifications to the software being built by a programming team. It is an umbrella activity that is applied throughout the software process."
 What are the SCM activities?, SCM activities are developed to :            1. Identify change Control change.            2. Ensure that change is being properly implemented.            3. Report changes to others who may have an interest.
 What is meant by loop testing?," Loop testing is a white box testing technique that focuses exclusively on the validity of loop constructs. This technique can be applied to simple loops, nested loops, concatenated loops, and unstructured loops."
 What is meant by smoke testing?," Smoke testing is an integration testing approach that is commonly used when ""shrink wrapped"" software products are being developed."
 28, Alpha test: Alpha test is the test that is conducted at the developer's site by a customer. Beta test: Beta test is the test that is conducted at one or more customer sites by the end-user of the software.
 What is meant by system testing?, System testing is actually a series of different tests whose primary purpose is to fully exercise the computer-based system. It verifies whether the system elements have been properly integrated and perform the allocated functions.
 Mention the categories of debugging approaches?,"There are three categories of debugging approaches as follows: Brute-force, Backtracking, and Cause elimination."
 Define metric?," IEEE93 defines as a quantitative measure of the degree to which a system, component, or process possesses a given attribute. Metrics are important measures of project parameters that help predict measure and control projects. Metrics also help in estimation."
 What is adaptive maintenance?,Adaptive maintenance is the maintenance to adapt the software to a different operating environment. It involves changing a system so that it operates in a different environment from its initial implementation.
 What is the user requirements?,"User requirements should describe functional and non-functional requirements so that they are understandable by system users who don't have detailed technical knowledge. User requirements are defined using natural language, tables, and diagrams."
 What is the test scenario?," The test scenario is the hypothetical story to test the particular functionality of an application. It serves as an input to functional testing. For the test scenario, we need use case."
 Define prototype?," Prototype is an initial version of a software system that is used to demonstrate concepts, try out design options, and generally find out more about the problem and its possible solutions."
 What is the system image?," The system image combines the outward manifestation of the computer-based system, coupled with all supporting information that describes system syntax and semantics"
 what is the transform mapping?,Transform mapping is a set of design steps that allows a DFD with transform flow characteristics to be mapped into a specific architectural style.
 What is the traceability matrix?," Traceability matrix is a document in which we map the test cases with the requirements. In general, we check whet er the application works as per requirements or whether we had covered all the required functionality through test cases."
 What is Agile?,"Agile software development is a group of software development methods in which requirements and solutions evolve through collaboration between self-organizing, cross-functional teams. It promotes adaptive planning, evolutionary development, early delivery, continuous improvement, and encourages rapid and flexible response to change."
  What are the advantages of agile?,The advantages of agile are :            1. Time to Market: Early and regular releases.            2. Revenue: Early Return On Investment (ROI).            3. High Quality and Productivity: Testing is integrated throughout the cycle.            4. Business Engagement/Customer Satisfaction: Active involvement of a business owner and the high visibility of the product and progress.            5. Motivated Teams: Active involvement & collaboration make Agile development more enjoyable
 What is Quality Control?, Quality Control focus is on the Product.QC measures a product against the existence of a required attribute. Major QC activity is identifying defects and correcting them (Rework).
 What is Quality Assurance?,"  Quality Assurance focus is on the Process rather than Product. QA ensures ""Fitness for Purpose"". Building process guidelines, checklists, templates, Training activities."
 What is Cost of Quality?," Cost of Quality (CoQ) is a measure of costs (effort) incurred in ensuring quality. CoQ is typically measured as the percentage of effort spent to ensure quality compared to total project effort. Thus CoQ of 31.38% means that compared to the overall effort, the team has spent 31.38% of the effort to ensure quality.            CoQ = ((Prevention cost + Appraisal cost + Failure cost) x 100) / Total Project effort"
 What is the Cost of Correcting Defects?,"   Defects can get introduced in any of the following stages: Requirements Analysis, Design and Build. It is important to identify the defects and fix them before the release of the software. Accordingly, there is effort and cost involved in fixing the defects."
 What are the advantages and disadvantages of Black-Box Testing?,"   The following table lists the advantages and disadvantages of black-box testing.            AdvantagesDisadvantagesWell suited and efficient for large code segments.Limited coverage, since only a selected number of test scenarios is actually performed.Code access is not required.Inefficient testing, tester only has limited knowledge about an application.Clearly separates user's perspective from the developer's perspective through visibly defined roles.Blind coverage, since the tester cannot target specific code segments or errorprone areas.Large numbers of moderately skilled testers can test the application with no knowledge of implementation, programming language, or operating systems.The test cases are difficult to design."
 What are the advantages and disadvantages of White-Box Testing?,"   The following table lists the advantages and disadvantages of White-Box Testing.            AdvantagesDisadvantagesDirect statement by statement testingVast resource neededCheck algorithm are correctly defined and coded.Cannot test performance in terms of availability, reliability, load durability.Adherence to coding standards.Difficult to maintainMeasure coding qualityCosts are high"
 What is the difference between validation and verification?,"   The following table lists the difference between validation and verification.            ValidationVerificationValidation is a dynamic mechanism of validating and testing the actual product.Verification is a static practice of verifying documents, design, code, and program.It does involve executing the code.It does not involve executing the code.It is computer-based execution of program.It is human-based checking of documents and files.Validation to check whether the software meets the customer expectation and requirement.Verification is to check whether the software conforms to the specification.It can catch errors that verification cannot catch. It is a high-level exercise.It can catch errors that validation cannot catch. It is a low-level exercise."
 What is the difference between cohesion and coupling?,   The following table lists the difference between cohesion and coupling.            CohesionCouplingCohesion is the concept of intra moduleCoupling is the concept of inter moduleCohesion represents the relationship within moduleCoupling represents the relationship between moduleIncreasing in cohesion is good for software.Increasing in coupling is avoided for software.Highly cohesive give the best softwareLoosely coupling give the best softwareModule focus on the single thingModule is connected to the other module.
 What is the difference between Alpha and Beta testing?,   The following table lists the difference between Alpha and Beta testing.            Alpha TestingBeta TestingPerform by developerPerform by customerConducted for software applicationConducted for software productPerformed in virtual environmentPerformed in a real environmentInvolves both white box and black box testingInvolves black box testingIt is not open to the market and publicIt is open to the market and public
 What is the difference between Quality Control and Quality Assurance?,   The following table lists the difference between Quality Control and Quality Assurance.            Quality AssuranceQuality ControlQA is a managing toolQC is a correcting toolQA is process orientedQC is product orientedQA use proactive strategyQC use reactive strategyQA use for prevention of defectsQC use for detection of defectsEveryone is responsibleTesting team is responsible

























































































